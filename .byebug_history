continue
env['simpler.template_path']
env['simpler.controller'].params
continue
env['simpler.controller']
continue
template_path.to_s.
template_path.class
template_path.split('app/views')
template_path.split('')
template_path.split()
template_path
tempalte_path
@env['simpler.template_path'] = template_path.split(VIEW_BASE_PATH)[1]
@env['simpler.template_path']
continue
env['simpler.controller']
env['simpler.controller'].params
env['simpler.controller']
env['simpler.controller.params']
env['template']
env['simpler.template']
env['simpler.controller']
env['simpler.controller'].class
env['simpler.controller']
env['simpler.params']
env['simpler']
env
continue
@path
path == @path
path == path
path.match(@path)
method && path.match(@path)
@method
@method == method && path.match(@path)
path
method
continue
Dir["#{Simpler.root}/lib/simpler/**/*.rb"]
Dir["#{Simpler.root}/simpler/lib/*.rb"]
Dir["#{Simpler.root}/simpler/lib/**/*.rb"]
Dir["#{Simpler.root}/simpler/*.rb"]
Dir["#{Simpler.root}/simpler/**/*.rb"]
Dir["#{Simpler.root}/app/**/*.rb"]
continue
@request.env["QUERY_STRING"]
continue
@request.env["QUERY_STRING"]
@request["QUERY_STRING"]
@request
      params = @request['QUIRY_STRING']
      params = @request['QUiRY_STRING']
      params = @request['QUERY_STRING']
@request      params = @request['QUERY_STRING']
@request
@req
path
continue
params
id
path
continue
(path, id)
[path, id]
path, id
params
param
id
path
continue
pathers, id = pather.split('/')[1..]
pathers, id = pather.split('/')[1.].
pathers, id = pather.split('/')[1.]
pathers, id = pather.split('/')[1:]
pathers, id = pather.split('/')
pathers, id = pather.split('/',2)
pathers, id = pather.split('/',4)
pathers, id = pather.split('/',-3)
pathers, id = pather.split('/',-1)
pathers, id = pather.split('/',3)
pathers, id = pather.split('/',2)
pathers, id = pather.split('/',1)
pather, params = path.split('?')
pather, id = pather.split('/')
params
pather
pather, params = path.split('?')
path
continue
id
params
path
continue
      path = env['REQUEST_PATH'].split('/')
continue
@routes.first
      path = env['REQUEST_PATH']
      path = env['REQUEST_PATH'].split('/')
      path = env['REQUEST_PATH'].split('/').second
      path = env['REQUEST_PATH'].split('/').first
      @routes.find { |route| route.match?(method, path) }
continue
